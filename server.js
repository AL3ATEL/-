const express = require('express');
const puppeteer = require('puppeteer');
const cron = require('node-cron');
const fs = require('fs');
const path = require('path');

const app = express();
const port = process.env.PORT || 3000;

// ุงููููุน ุงูุฐู ุชุฑูุฏ ูุฑุงูุจุชู - ุบูุฑ ูุฐุง ุงูุฑุงุจุท!
const WEBSITE_URL = "https://gartic.io/49r1Q8"; 
// ุบูุฑ ุงูุฑุงุจุท ููููุนู

class WebsiteMonitor {
    constructor() {
        this.screenshotCount = 0;
    }

    async captureScreenshot() {
        try {
            console.log(`๐ธ ุฌุงุฑู ุงูุชูุงุท ุตูุฑุฉ #${++this.screenshotCount}...`);
            
            const browser = await puppeteer.launch({
                headless: true,
                args: [
                    '--no-sandbox',
                    '--disable-setuid-sandbox',
                    '--disable-dev-shm-usage',
                    '--disable-gpu'
                ]
            });

            const page = await browser.newPage();
            await page.setViewport({ width: 1920, height: 1080 });
            
            // ุงุฐูุจ ูููููุน ูุงูุชุธุฑ ุญุชู ุงูุชุญููู
            await page.goto(WEBSITE_URL, { 
                waitUntil: 'networkidle2',
                timeout: 30000 
            });

            // ุฃูุชุธุฑ 2 ุซุงููุฉ ุฅุถุงููุฉ ููุชุฃูุฏ ูู ุชุญููู ูู ุดูุก
            await new Promise(resolve => setTimeout(resolve, 2000));

            // ุฃูุดุฆ ุงุณู ููู ุจุงูููุช
            const timestamp = new Date().toLocaleString('ar-SA').replace(/[/:, ]/g, '-');
            const filename = `screenshot-${timestamp}.png`;
            
            // ุงูุชูุท ุงูุตูุฑุฉ
            await page.screenshot({ 
                path: `/tmp/${filename}`,
                fullPage: true,
                quality: 80
            });

            await browser.close();

            console.log(`โ ุชู ุงูุชูุงุท ุงูุตูุฑุฉ ุจูุฌุงุญ: ${filename}`);
            console.log(`โฐ ุงูููุช: ${new Date().toLocaleString('ar-SA')}`);
            console.log('โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ');

            return filename;

        } catch (error) {
            console.log('โ ุฎุทุฃ ูู ุงูุชูุงุท ุงูุตูุฑุฉ:', error.message);
            return null;
        }
    }

    startMonitoring() {
        console.log('๐ ุจุฏุก ูุฑุงูุจุฉ ุงููููุน...');
        console.log(`๐ ุงููููุน: ${WEBSITE_URL}`);
        console.log('โฐ ุณูุชู ุงูุชูุงุท ุตูุฑุฉ ูู 5 ุซูุงูู');
        console.log('โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ');

        // ุงูุชูุท ุตูุฑุฉ ููุฑูุฉ ุนูุฏ ุงูุจุฏุก
        this.captureScreenshot();

        // ุฌุฏููุฉ ุงูุชูุงุท ุตูุฑุฉ ูู 5 ุซูุงูู
        cron.schedule('*/5 * * * * *', () => {
            this.captureScreenshot();
        });
    }
}

// ุฅูุดุงุก ุงูููููุชูุฑ
const monitor = new WebsiteMonitor();

// ุตูุญุฉ ุงูุฑุฆูุณูุฉ ูุชุฃูุฏ ูู ุฃู ุงูุณูุฑุจุช ุดุบุงู
app.get('/', (req, res) => {
    res.send(`
        <!DOCTYPE html>
        <html dir="rtl">
        <head>
            <meta charset="UTF-8">
            <title>ูุฑุงูุจ ุงููููุน</title>
            <style>
                body { font-family: Arial, sans-serif; text-align: center; padding: 50px; }
                .status { color: green; font-size: 24px; }
                .info { margin: 20px 0; }
            </style>
        </head>
        <body>
            <h1>๐ ุณูุฑุจุช ูุฑุงูุจุฉ ุงููููุน ุดุบุงู!</h1>
            <div class="status">โ ุงูุญุงูุฉ: ูุดุท</div>
            <div class="info">๐ ุงููููุน: ${WEBSITE_URL}</div>
            <div class="info">โฐ ูุชู ุงูุชูุงุท ุตูุฑุฉ ูู 5 ุซูุงูู</div>
            <div class="info">๐ธ ุนุฏุฏ ุงูุตูุฑ ุงูููุชูุทุฉ: ${monitor.screenshotCount}</div>
            <p>ุชุงุจุน ุงูุณุฌูุงุช ูู ููุญุฉ ุชุญูู Railway ูุชุฑู ุงูุตูุฑ ุงูููุชูุทุฉ</p>
        </body>
        </html>
    `);
});

// ุชุดุบูู ุงูุณูุฑูุฑ
app.listen(port, () => {
    console.log(`๐ฅ๏ธ  ุงูุณูุฑูุฑ ุดุบุงู ุนูู ุงูุจูุฑุช ${port}`);
    console.log(`๐ ููููู ุฒูุงุฑุฉ: http://localhost:${port}`);
    console.log('โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ');
    
    // ุจุฏุก ุงููุฑุงูุจุฉ
    monitor.startMonitoring();
});
